"""add core tables

Revision ID: e38bb319ef35
Revises: 8bb403d417ae
Create Date: 2025-10-14 14:30:09.283906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e38bb319ef35'
down_revision: Union[str, Sequence[str], None] = '8bb403d417ae'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tests',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('test_date', sa.DateTime(), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('correct_count', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tests_user_id'), 'tests', ['user_id'], unique=False)
    op.create_table('uploaded_files',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_type', sa.String(length=20), nullable=False),
    sa.Column('ai_status', sa.String(length=20), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uploaded_files_user_id'), 'uploaded_files', ['user_id'], unique=False)
    op.create_table('concepts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('file_id', sa.String(length=36), nullable=False),
    sa.Column('keyword', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('importance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['uploaded_files.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_concepts_file_id'), 'concepts', ['file_id'], unique=False)
    op.create_index(op.f('ix_concepts_keyword'), 'concepts', ['keyword'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('concept_id', sa.String(length=36), nullable=False),
    sa.Column('question_type', sa.Enum('mcq', 'ox', 'short', name='qtype'), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('correct_answer', sa.Text(), nullable=False),
    sa.Column('options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['concepts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_questions_concept_difficulty', 'questions', ['concept_id', 'difficulty'], unique=False)
    op.create_index(op.f('ix_questions_concept_id'), 'questions', ['concept_id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('test_id', sa.String(length=36), nullable=False),
    sa.Column('question_id', sa.String(length=36), nullable=False),
    sa.Column('user_answer', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_question_id'), 'answers', ['question_id'], unique=False)
    op.create_index(op.f('ix_answers_test_id'), 'answers', ['test_id'], unique=False)
    op.create_table('test_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('test_id', sa.String(length=36), nullable=False),
    sa.Column('question_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('test_id', 'question_id', name='uq_test_question')
    )
    op.create_index(op.f('ix_test_items_question_id'), 'test_items', ['question_id'], unique=False)
    op.create_index(op.f('ix_test_items_test_id'), 'test_items', ['test_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_items_test_id'), table_name='test_items')
    op.drop_index(op.f('ix_test_items_question_id'), table_name='test_items')
    op.drop_table('test_items')
    op.drop_index(op.f('ix_answers_test_id'), table_name='answers')
    op.drop_index(op.f('ix_answers_question_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_questions_concept_id'), table_name='questions')
    op.drop_index('idx_questions_concept_difficulty', table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_concepts_keyword'), table_name='concepts')
    op.drop_index(op.f('ix_concepts_file_id'), table_name='concepts')
    op.drop_table('concepts')
    op.drop_index(op.f('ix_uploaded_files_user_id'), table_name='uploaded_files')
    op.drop_table('uploaded_files')
    op.drop_index(op.f('ix_tests_user_id'), table_name='tests')
    op.drop_table('tests')
    # ### end Alembic commands ###
